<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.codeproj.traininghandler</groupId>
	<artifactId>traininghandler</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>traininghandler</name>
	<developers>
		<developer>
			<id>hronnie</id>
			<name>Aron Harsfalvi</name>
			<email>aron.harsfalvi@gmail.com</email>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>0</timezone>
		</developer>
	</developers>

	<properties>
		<spring.version>4.0.5.RELEASE</spring.version>
		<spring.security.version>3.2.3.RELEASE</spring.security.version>
		<powermock.version>1.5.3</powermock.version>
		<apache.tiles.version>3.0.4</apache.tiles.version>
	</properties>



	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>

		<!-- ********** Spring dependencies ******** -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring MVC -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring security -->

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>20041127.091804</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>


		<!-- ******** TEST dependencies ********* -->

		<!-- Mockito -->

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.4</version>
		</dependency>

		<!-- JUnit 4 -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>

		<!-- DBUnit - db test -->

		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.2</version>
		</dependency>

		<!-- Powermock -->

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4-legacy</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- for Hibernate and MySQL -->

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.0.1.Final</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Hibernate c3p0 connection pool -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>3.6.3.Final</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.10</version>
		</dependency>

		<!-- for Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<!-- SLF4J -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.2</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<url>http://localhost:8080/manager/text</url>
					<username>tomcat</username>
					<password>s3cret</password>
					<path>/${project.build.finalName}</path>
					<port>8080</port>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<fork>true</fork>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<profiles>
		<!-- DATABASE BUILD -->
		<profile>
			<id>mysql_th</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>

						<dependencies>
							<!-- specify the dependent JDBC driver here -->
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>5.1.22</version>
							</dependency>
						</dependencies>

						<!-- common configuration shared by all executions -->
						<configuration>
							<driver>org.gjt.mm.mysql.Driver</driver>
							<url>jdbc:mysql://${th.db.mysql.server.name}:${th.db.mysql.server.port}/${th.db.mysql.dbname}</url>
							<username>${th.db.mysql.username}</username>
							<password>${th.db.mysql.password}</password>
						</configuration>

						<executions>
							<execution>
								<id>drop-db</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<!-- specific configuration for this execution -->

								<configuration>
									<!-- need another database to drop the targeted one -->
									<url>jdbc:mysql://${th.db.mysql.server.name}:${th.db.mysql.server.port}/${th.db.mysql.dummydb.name}</url>
									<autocommit>true</autocommit>
									<sqlCommand>drop database ${th.db.mysql.dbname}</sqlCommand>
									<!-- ignore error when database is not avaiable -->
									<onError>continue</onError>
								</configuration>
							</execution>

							<execution>
								<id>create-db</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<url>jdbc:mysql://${th.db.mysql.server.name}:${th.db.mysql.server.port}/${th.db.mysql.dummydb.name}</url>
									<!-- no transaction -->
									<autocommit>true</autocommit>
									<sqlCommand>create database ${th.db.mysql.dbname}</sqlCommand>
								</configuration>
							</execution>

							<execution>
								<id>create-schema</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<url>jdbc:mysql://${th.db.mysql.server.name}:${th.db.mysql.server.port}/${th.db.mysql.dbname}</url>
									<autocommit>true</autocommit>
									<srcFiles>
										<!-- TABLES -->
										<srcFile>src/main/sql/schema/Address.sql</srcFile>
										<srcFile>src/main/sql/schema/UserType.sql</srcFile>
										<srcFile>src/main/sql/schema/User.sql</srcFile>
										<srcFile>src/main/sql/schema/Appointment.sql</srcFile>
										<srcFile>src/main/sql/schema/Role.sql</srcFile>
										<srcFile>src/main/sql/schema/UserRole.sql</srcFile>
										<srcFile>src/main/sql/schema/EmailTemplate.sql</srcFile>
										<srcFile>src/main/sql/schema/GeneralSettings.sql</srcFile>
										<srcFile>src/main/sql/schema/Log.sql</srcFile>
										<srcFile>src/main/sql/schema/TrainingRef.sql</srcFile>
										<srcFile>src/main/sql/schema/Training.sql</srcFile>
										<srcFile>src/main/sql/schema/SentTrainingEmail.sql</srcFile>
										<srcFile>src/main/sql/schema/TrainingPrerequisite.sql</srcFile>
										<srcFile>src/main/sql/schema/UserLevel.sql</srcFile>
										<srcFile>src/main/sql/schema/UserTraining.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>

							<execution>
								<id>create-data</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<url>jdbc:mysql://${th.db.mysql.server.name}:${th.db.mysql.server.port}/${th.db.mysql.dbname}</url>
									<autocommit>true</autocommit>
									<srcFiles>
										<!-- DATA -->
										<srcFile>src/main/sql/data/AddressData.sql</srcFile>
										<srcFile>src/main/sql/data/UserTypeData.sql</srcFile>
										<srcFile>src/main/sql/data/UserData.sql</srcFile>
										<srcFile>src/main/sql/data/AppointmentData.sql</srcFile>
										<srcFile>src/main/sql/data/RoleData.sql</srcFile>
										<srcFile>src/main/sql/data/UserRoleData.sql</srcFile>
										<srcFile>src/main/sql/data/EmailTemplateData.sql</srcFile>
										<srcFile>src/main/sql/data/GeneralSettingsData.sql</srcFile>
										<srcFile>src/main/sql/data/LogData.sql</srcFile>
										<srcFile>src/main/sql/data/TrainingRefData.sql</srcFile>
										<srcFile>src/main/sql/data/TrainingData.sql</srcFile>
										<srcFile>src/main/sql/data/SentTrainingEmailData.sql</srcFile>
										<srcFile>src/main/sql/data/TrainingPrerequisiteData.sql</srcFile>
										<srcFile>src/main/sql/data/UserLevelData.sql</srcFile>
										<srcFile>src/main/sql/data/UserTrainingData.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>