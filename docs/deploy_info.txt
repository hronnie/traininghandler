Requirements: 
Java 1.7
Maven 3.x
MySQL 5.x

########### DB #############
 - change connection parameters for DB in setup.sql, settings.xml (see also in Maven section), database.properties
 - Run setup.sql file for setting up local DB (you can change the DB name here)
 - Remove every test users and create admin users (UserData.sql) and generate encrypted password with PasswordEncoderGenerator class
 - Add admin creditentials for the created admin users in UserRole table
 - in /traininghandler/src/main/webapp/WEB-INF/traininghandler-security.xml set DB creditentials for spring security
 - Set the correct character handling for the DB. Edit /etc/mysql/my.cnf: 
 add the following snippet after [mysqld] line: 
# Character encoding settings
character-set-server=utf8
collation-server=utf8_general_ci

########### Maven #############
Add profile in ~/.m2/settings.xml: 

<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">

    <profiles>
        <profile>
            <id>[your profile name]</id>
            <properties>
                <th.db.mysql.server.name>localhost</th.db.mysql.server.name>
                <th.db.mysql.server.port>3306</th.db.mysql.server.port>
                <th.db.mysql.dbname>traininghandler</th.db.mysql.dbname>
                <th.db.mysql.dummydb.name>db_bootstrap</th.db.mysql.dummydb.name>
                <th.db.mysql.username>training</th.db.mysql.username>
                <th.db.mysql.password>rootpass</th.db.mysql.password>
            </properties>./src/main/sql/setup.sql
        </profile>
    </profiles>

    <activeProfiles>
        <activeProfile>[your profile name]</activeProfile>
    </activeProfiles>

    <servers>
      <server>
        <id>localhost</id>
        <username>tomcat</username>
        <password>s3cret</password>
      </server>
    </servers>
</settings>

########### Server settings #############
 - Change name of the servlet in applicationContext.xml
 - Change BASE_WS_URL in thGlobalConstants.js for the servlet name
 - Change file name in log4j.xml
 - Change every catalog="traininghandler" with the name of DB in traininghandler.hbm.xml
 - Change arcifactId and name in pom.xml
 - Change the name of traininghandler-servlet.xml for [servlet name]-.... .xml
 - Change the relevant names in web.xml contextConfigLocation section
 - Forward port 8080 to 80 with iptables: execute and put to /etc/rc.local the following command: 
 iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to 8080
 